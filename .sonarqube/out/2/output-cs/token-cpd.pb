Œ
QD:\GIT_EFITEC2021\GrupoFeFaseDos\HumanManagement\WSTestLogService.Test\Program.cs
	namespace 	
WSTestLogService
 
. 
Test 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder $
($ %
args% )
)) *
. 
ConfigureLogging  
(  !
options! (
=>) +
options, 3
.3 4
	AddFilter4 =
<= >"
EventLogLoggerProvider> T
>T U
(U V
levelV [
=>\ ^
level_ d
>=e g
LogLevelh p
.p q
Informationq |
)| }
)} ~
. 
ConfigureServices !
(! "
(" #
hostContext# .
,. /
services0 8
)8 9
=>: <
{ 
IConfiguration !
configuration" /
=0 1
hostContext2 =
.= >
Configuration> K
;K L
Log 
. 
Logger 
= 
new  #
LoggerConfiguration$ 7
(7 8
)8 9
.9 :
ReadFrom: B
.B C
ConfigurationC P
(P Q
hostContextQ \
.\ ]
Configuration] j
)j k
.k l
CreateLoggerl x
(x y
)y z
;z {
var 
conexion 
=  !
configuration" /
./ 0
GetConnectionString0 C
(C D
$strD S
)S T
;T U
services 
. 
AddHostedService ,
<, -
Worker- 3
>3 4
(4 5
)5 6
;6 7
services   
.   
AddHostedService   ,
<  , -
Worker  - 3
>  3 4
(  4 5
)  5 6
.!! 
	Configure!! !
<!!! "
EventLogSettings!!" 2
>!!2 3
(!!3 4
config!!4 :
=>!!; =
{"" 
config## !
.##! "
LogName##" )
=##* +
$str##, 2
;##2 3
config$$ !
.$$! "

SourceName$$" ,
=$$- .
$str$$/ C
;$$C D
}&& 
)&& 
;&& 
})) 
))) 
.** 

UseSerilog** 
(** 
(** 
hostContext** '
,**' (
services**) 1
,**1 2
logger**3 9
)**9 :
=>**; =
{**> ?
logger++ 
.++ 
ReadFrom++ "
.++" #
Configuration++# 0
(++0 1
hostContext++1 <
.++< =
Configuration++= J
)++J K
;++K L
},, 
),, 
;,, 
}.. 
}// ì
PD:\GIT_EFITEC2021\GrupoFeFaseDos\HumanManagement\WSTestLogService.Test\Worker.cs
	namespace		 	
WSTestLogService		
 
.		 
Test		 
{

 
public 

class 
Worker 
: 
BackgroundService +
{ 
private 
readonly 
ILogger  
<  !
Worker! '
>' (
_logger) 0
;0 1
public 
Worker 
( 
ILogger 
< 
Worker $
>$ %
logger& ,
), -
{ 	
_logger 
= 
logger 
; 
} 	
	protected 
override 
async  
Task! %
ExecuteAsync& 2
(2 3
CancellationToken3 D
stoppingTokenE R
)R S
{ 	
while 
( 
! 
stoppingToken !
.! "#
IsCancellationRequested" 9
)9 :
{ 
_logger 
. 
LogInformation &
(& '
$str' B
,B C
DateTimeOffsetD R
.R S
NowS V
)V W
;W X
await 
Task 
. 
Delay  
(  !
$num! %
,% &
stoppingToken' 4
)4 5
;5 6
} 
} 	
} 
} 